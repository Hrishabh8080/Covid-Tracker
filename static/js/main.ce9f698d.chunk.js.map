{"version":3,"sources":["InfoBox.js","Table.js","util.js","DailyCases.js","App.js","index.js"],"names":["InfoBox","title","cases","total","Card","CardContent","Typography","className","color","Table","countries","map","i","country","sortData","data","sort","a","b","DailyCases","dailyData","dataa","adate","recovered","deaths","reverse","App","useState","setCountries","setInputCountry","countryInfo","setCountryInfo","tableData","setTableData","input","setInput","setdailyData","dailyData1","useEffect","url","fetch","then","res","json","dat","da","push","console","log","response","name","value","iso2","sortedData","getCountriesData","onCountryChange","e","countryCode","target","params","FormControl","Select","onChange","variant","MenuItem","todayCases","todayRecovered","todayDeaths","TextField","placeholder","event","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce9f698d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, CardContent, Typography } from '@material-ui/core'\r\n\r\nfunction InfoBox({ title, cases, total }) {\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Typography className=\"infoBox__title\" color='textSecondary'>\r\n                    {title}\r\n                </Typography>\r\n                <h2 className=\"infoBox__cases\">{cases}</h2>\r\n\r\n                <Typography className=\"infoBox__total\" color='textSecondary' >\r\n                    {total} Total\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react'\r\nimport './Table.css'\r\n\r\nfunction Table({ countries }) {\r\n    return (\r\n        <div className='table'>\r\n            {\r\n                countries.map(({ country, cases },i) => (\r\n                    <tr key={i}>\r\n                        <td>{country}</td>\r\n                        <td>\r\n                            <strong>{cases}</strong>\r\n                        </td>\r\n                    </tr>\r\n                ))\r\n            }\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Table\r\n","export const sortData = (data) => {\r\n    const sortedData = [...data];\r\n    return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1)\r\n\r\n    //    return sortedData.sort((a, b) => a.cases < b.cases)\r\n\r\n    // sortedData.sort((a, b) => {\r\n    //     if (a.cases > b.cases) {\r\n    //         return -1;\r\n    //     } else {\r\n    //         return 1;\r\n    //     }\r\n    // })\r\n    // return sortedData;\r\n}","import React from 'react'\r\nimport './DailyCases.css';\r\nexport const DailyCases = ({ dailyData }) => {\r\n    // fetchData();\r\n    return (\r\n        <div className='table1' >\r\n\r\n            {/* {console.log(dailyData)} */}\r\n            \r\n            <tr>\r\n                <th>Date</th>    \r\n                <th>Total Cases</th>    \r\n                <th>Total Recover</th>    \r\n                <th>Total Death</th>    \r\n            </tr>\r\n            {\r\n                dailyData.map((dataa, i) => (\r\n                    <tr key={i}>\r\n                        <td>{dataa.adate}</td>\r\n                        <td><strong>{dataa.cases}</strong></td>\r\n                        <td><strong>{dataa.recovered}</strong></td>\r\n                        <td><strong>{dataa.deaths}</strong></td>\r\n                    </tr>\r\n                )).reverse()\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport { FormControl, Select, MenuItem, Card, CardContent, TextField } from '@material-ui/core'\nimport { useState, useEffect } from 'react';\nimport InfoBox from './InfoBox';\nimport Table from './Table';\nimport { sortData } from './util'\nimport { DailyCases } from './DailyCases';\nimport Particles from 'react-particles-js';\nfunction App() {\n  //https://disease.sh/v3/covid-19/countries\n  const [countries, setCountries] = useState([]);\n  const [country, setInputCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [input, setInput] = useState('10');\n  const [dailyData, setdailyData] = useState([]);\n  let dailyData1 = [];\n\n  const particlesEffect = {\n    \"particles\": {\n      \"number\": {\n        \"value\": 80,\n        \"density\": {\n          \"enable\": true,\n          \"value_area\": 800\n        }\n      },\n      \"color\": {\n        \"value\": [\"#BD10E0\", \"#B8E986\", \"#50E3C2\", \"#FFD300\", \"#E86363\"]\n      },\n    }\n  }\n\n\n  useEffect(() => {\n    const url = `https://disease.sh/v3/covid-19/historical/${country === 'worldwide' ? 'all' : 'all'}?lastdays=${input}`\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        for (let dat in data.cases) {\n          // console.log(dat)\n          let da = {\n            adate: dat,\n            cases: data.cases[dat],\n            deaths: data.deaths[dat],\n            recovered: data.recovered[dat],\n          }\n\n          dailyData1.push(da)\n        }\n        setdailyData(dailyData1)\n        console.log(dailyData)\n      });\n\n  },[input])\n\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then(data => { setCountryInfo(data) })\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries')\n        .then(res => res.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }));\n          const sortedData = sortData(data);\n          setTableData(sortedData)\n          setCountries(countries)\n        });\n    };\n    getCountriesData();\n  }, [])\n\n\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n      });\n  };\n  // console.log(countryInfo)\n  return (\n    <>\n      <div className=\"app\">\n        <Particles params={particlesEffect} className=\"particles\"></Particles>\n        <div className=\"app__left\">\n          <div className=\"app__header\">\n            <h1>Covid-Tracker</h1>\n            <FormControl className=\"app__dropdown\">\n              <Select onChange={onCountryChange} variant=\"outlined\" value={country} >\n                <MenuItem value='worldwide'>Worldwide</MenuItem>\n                {\n                  countries.map((country) => (\n                    <MenuItem value={country.value}>{country.name}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          </div>\n          <div className=\"app__stats\">\n\n            <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n            <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n            <InfoBox title=\"Death\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n          </div>\n          <CardContent>\n            <br />\n            <h2>Worldwide New Daily Cases</h2>\n            <hr />\n            <div className=\"daily__appbar\">\n              <h3 >Enter Day duration</h3>\n              <TextField placeholder='Max 30 Day' value={input} onChange={event => setInput(event.target.value.replace(/\\D/, ''))} />\n              {/* <button onClick={fetchData}> click me   </button> */}\n            </div>\n            {/* {console.log('data>>>' + country)} */}\n            <DailyCases dailyData={dailyData} />\n          </CardContent>\n        </div>\n        <Card className=\"app__right\">\n          <CardContent>\n            <h3>Live Case By Country</h3>\n            <Table countries={tableData} />\n          </CardContent>\n        </Card>\n      </div>\n      <footer>\n        &#169;   Made By HRishabh\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}