{"version":3,"sources":["InfoBox.js","Table.js","util.js","DailyCases.js","App.js","index.js"],"names":["InfoBox","title","cases","total","Card","CardContent","Typography","className","color","Table","countries","map","i","country","sortData","data","sort","a","b","DailyCases","dailyData","console","log","dataa","adate","recovered","deaths","App","useState","setCountries","setInputCountry","countryInfo","setCountryInfo","tableData","setTableData","input","setInput","setdailyData","dailyData1","useEffect","fetch","then","res","json","dat","da","push","response","name","value","iso2","sortedData","getCountriesData","onCountryChange","e","countryCode","target","url","params","particles","number","density","enable","value_area","FormControl","Select","onChange","variant","MenuItem","todayCases","todayRecovered","todayDeaths","TextField","placeholder","event","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mXAoBeA,MAjBf,YAA2C,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAC7B,OACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,UAAU,iBAAiBC,MAAM,gBAA7C,SACKP,IAEL,oBAAIM,UAAU,iBAAd,SAAgCL,IAEhC,eAACI,EAAA,EAAD,CAAYC,UAAU,iBAAiBC,MAAM,gBAA7C,UACKL,EADL,kB,OCQDM,MAjBf,YAA+B,IAAdC,EAAa,EAAbA,UACb,OACI,qBAAKH,UAAU,QAAf,SAEQG,EAAUC,KAAI,WAAoBC,GAApB,IAAGC,EAAH,EAAGA,QAASX,EAAZ,EAAYA,MAAZ,OACV,+BACI,6BAAKW,IACL,6BACI,iCAASX,QAHRU,S,SCRhBE,EAAW,SAACC,GAErB,OADgB,YAAOA,GACLC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEf,MAAQgB,EAAEhB,OAAS,EAAI,MCAjDiB,G,OAAa,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEzB,OACI,sBAAKb,UAAU,SAAf,UAEKc,QAAQC,IAAIF,GAEb,+BACI,sCACA,uCACA,yCACA,0CAGAA,EAAUT,KAAI,SAACY,EAAOX,GAAR,OACV,+BACI,6BAAKW,EAAMC,QACX,6BAAI,iCAASD,EAAMrB,UACnB,6BAAI,iCAASqB,EAAME,cACnB,6BAAI,iCAASF,EAAMG,aAJdd,W,kBCsIde,MA/If,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOlB,EAAP,KAAkBmB,EAAlB,KACA,EAAmCD,mBAAS,aAA5C,mBAAOf,EAAP,KAAgBiB,EAAhB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0BN,mBAAS,MAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAkCR,mBAAS,IAA3C,mBAAOR,EAAP,KAAkBiB,EAAlB,KACIC,EAAa,GAejBC,qBAAU,WACRC,MAAM,6CAAD,OAAwE,MAAxE,qBAAkGL,IACpGM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA1B,GACJ,IAAK,IAAI6B,KAAO7B,EAAKb,MAAO,CAE1B,IAAI2C,EAAK,CACPrB,MAAOoB,EACP1C,MAAOa,EAAKb,MAAM0C,GAClBlB,OAAQX,EAAKW,OAAOkB,GACpBnB,UAAWV,EAAKU,UAAUmB,IAE5BN,EAAWQ,KAAKD,GAElBR,EAAaC,GAMbjB,QAAQC,IAAIF,QAIf,CAACe,IAGJI,qBAAU,WACRC,MAAM,sCACHC,MAAK,SAACM,GAAD,OAAcA,EAASJ,UAC5BF,MAAK,SAAA1B,GAAUiB,EAAejB,QAChC,IAEHwB,qBAAU,YACc,uCAAG,sBAAAtB,EAAA,sEACjBuB,MAAM,4CACTC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAC1B,GACL,IAAML,EAAYK,EAAKJ,KAAI,SAACE,GAAD,MAAc,CACvCmC,KAAMnC,EAAQA,QACdoC,MAAOpC,EAAQkB,YAAYmB,SAGvBC,EAAarC,EAASC,GAE5BmB,EAAaiB,GACbtB,EAAanB,MAZM,2CAAH,qDAetB0C,KACC,IAIH,IAAMC,EAAe,uCAAG,WAAOC,GAAP,iBAAArC,EAAA,6DAChBsC,EAAcD,EAAEE,OAAOP,MACvBQ,EACY,cAAhBF,EACI,qCADJ,mDAEgDA,GAL5B,SAMhBf,MAAMiB,GACThB,MAAK,SAACM,GAAD,OAAcA,EAASJ,UAC5BF,MAAK,SAAC1B,GACLe,EAAgByB,GAChBvB,EAAejB,MAVG,2CAAH,sDAgBrB,OADAM,QAAQC,IAAIS,GAEV,sBAAKxB,UAAU,MAAf,UACE,cAAC,IAAD,CAAWmD,OArFS,CACtBC,UAAW,CACTC,OAAQ,CACNX,MAAO,GACPY,QAAS,CACPC,QAAQ,EACRC,WAAY,QA+EoBxD,UAAU,cAC9C,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAf,UACE,+CACA,cAACyD,EAAA,EAAD,CAAazD,UAAU,gBAAvB,SACE,eAAC0D,EAAA,EAAD,CAAQC,SAAUb,EAAiBc,QAAQ,WAAWlB,MAAOpC,EAA7D,UACE,cAACuD,EAAA,EAAD,CAAUnB,MAAM,YAAhB,uBAEEvC,EAAUC,KAAI,SAACE,GAAD,OACZ,cAACuD,EAAA,EAAD,CAAUnB,MAAOpC,EAAQoC,MAAzB,SAAiCpC,EAAQmC,kBAOnD,sBAAKzC,UAAU,aAAf,UACE,cAAC,EAAD,CAASN,MAAM,oBAAoBC,MAAO6B,EAAYsC,WAAYlE,MAAO4B,EAAY7B,QACrF,cAAC,EAAD,CAASD,MAAM,YAAYC,MAAO6B,EAAYuC,eAAgBnE,MAAO4B,EAAYN,YACjF,cAAC,EAAD,CAASxB,MAAM,QAAQC,MAAO6B,EAAYwC,YAAapE,MAAO4B,EAAYL,YAE5E,eAACrB,EAAA,EAAD,WAEE,uBACA,mDACA,uBACA,sBAAKE,UAAU,gBAAf,UACE,oDACA,cAACiE,EAAA,EAAD,CAAWC,YAAY,cAAcxB,MAAOd,EAAO+B,SAAU,SAAAQ,GAAK,OAAItC,EAASsC,EAAMlB,OAAOP,MAAM0B,QAAQ,KAAM,WAIlH,cAAC,EAAD,CAAYvD,UAAWA,UAI3B,cAAChB,EAAA,EAAD,CAAMG,UAAU,aAAhB,SACE,eAACF,EAAA,EAAD,WACE,sDACA,cAAC,EAAD,CAAOK,UAAWuB,IAClB,8DC1IV2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.441c79f6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, CardContent, Typography } from '@material-ui/core'\r\n\r\nfunction InfoBox({ title, cases, total }) {\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Typography className=\"infoBox__title\" color='textSecondary'>\r\n                    {title}\r\n                </Typography>\r\n                <h2 className=\"infoBox__cases\">{cases}</h2>\r\n\r\n                <Typography className=\"infoBox__total\" color='textSecondary' >\r\n                    {total} Total\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react'\r\nimport './Table.css'\r\n\r\nfunction Table({ countries }) {\r\n    return (\r\n        <div className='table'>\r\n            {\r\n                countries.map(({ country, cases },i) => (\r\n                    <tr key={i}>\r\n                        <td>{country}</td>\r\n                        <td>\r\n                            <strong>{cases}</strong>\r\n                        </td>\r\n                    </tr>\r\n                ))\r\n            }\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Table\r\n","export const sortData = (data) => {\r\n    const sortedData = [...data];\r\n    return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1)\r\n\r\n    //    return sortedData.sort((a, b) => a.cases < b.cases)\r\n\r\n    // sortedData.sort((a, b) => {\r\n    //     if (a.cases > b.cases) {\r\n    //         return -1;\r\n    //     } else {\r\n    //         return 1;\r\n    //     }\r\n    // })\r\n    // return sortedData;\r\n}","import React, { useEffect, useState } from 'react'\r\nimport './DailyCases.css';\r\nexport const DailyCases = ({ dailyData }) => {\r\n    // fetchData();\r\n    return (\r\n        <div className='table1' >\r\n\r\n            {console.log(dailyData)}\r\n            \r\n            <tr>\r\n                <th>Date</th>    \r\n                <th>Cases</th>    \r\n                <th>Recover</th>    \r\n                <th>Death</th>    \r\n            </tr>\r\n            {\r\n                dailyData.map((dataa, i) => (\r\n                    <tr key={i}>\r\n                        <td>{dataa.adate}</td>\r\n                        <td><strong>{dataa.cases}</strong></td>\r\n                        <td><strong>{dataa.recovered}</strong></td>\r\n                        <td><strong>{dataa.deaths}</strong></td>\r\n                    </tr>\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport { FormControl, Select, MenuItem, Card, CardContent, TextField } from '@material-ui/core'\nimport { useState, useEffect } from 'react';\nimport InfoBox from './InfoBox';\nimport Table from './Table';\nimport { sortData } from './util'\nimport { DailyCases } from './DailyCases';\nimport Particles from 'react-particles-js';\nfunction App() {\n  //https://disease.sh/v3/covid-19/countries\n  const [countries, setCountries] = useState([]);\n  const [country, setInputCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [input, setInput] = useState('10');\n  const [dailyData, setdailyData] = useState([]);\n  let dailyData1 = [];\n\n  const particlesEffect = {\n    particles: {\n      number: {\n        value: 10,\n        density: {\n          enable: true,\n          value_area: 100\n        }\n      }\n    }\n  }\n\n\n  useEffect(() => {\n    fetch(`https://disease.sh/v3/covid-19/historical/${country === 'worldwide' ? 'all' : 'all'}?lastdays=${input}`)\n      .then(res => res.json())\n      .then(data => {\n        for (let dat in data.cases) {\n\n          let da = {\n            adate: dat,\n            cases: data.cases[dat],\n            deaths: data.deaths[dat],\n            recovered: data.recovered[dat],\n          }\n          dailyData1.push(da)\n        }\n        setdailyData(dailyData1)\n        // Object.keys(data.cases).map((key, i) => (\n        //     dailyData.push({ value: data.cases[key] })\n\n        // ))\n        // console.log(data)\n        console.log(dailyData)\n\n      });\n\n  }, [input])\n\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then(data => { setCountryInfo(data) })\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries')\n        .then(res => res.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }));\n\n          const sortedData = sortData(data);\n\n          setTableData(sortedData)\n          setCountries(countries)\n        });\n    };\n    getCountriesData();\n  }, [])\n\n\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        //    setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        //  setMapZoom(4);\n      });\n  };\n  console.log(countryInfo)\n  return (\n    <div className=\"app\">\n      <Particles params={particlesEffect} className=\"particles\"></Particles>\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid-Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select onChange={onCountryChange} variant=\"outlined\" value={country} >\n              <MenuItem value='worldwide'>Worldwide</MenuItem>\n              {\n                countries.map((country) => (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n          <InfoBox title=\"Dedth\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n        </div>\n        <CardContent>\n\n          <br />\n          <h2>Check Daily Cases</h2>\n          <hr />\n          <div className=\"daily__appbar\">\n            <h3 >Enter Day duration</h3>\n            <TextField placeholder='Max 360 Day' value={input} onChange={event => setInput(event.target.value.replace(/\\D/, ''))} />\n            {/* <button onClick={fetchData}> click me   </button> */}\n          </div>\n          {/* {console.log('data>>>' + dailyData)} */}\n          <DailyCases dailyData={dailyData} />\n        </CardContent>\n        {/* <Map /> */}\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Case By Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new Cases</h3>\n          {/* <LineGraph  /> */}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}